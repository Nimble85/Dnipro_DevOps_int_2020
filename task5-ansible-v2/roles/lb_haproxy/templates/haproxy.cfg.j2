#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   http://haproxy.1wt.eu/download/1.4/doc/configuration.txt
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    log         /var/log  local2

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    #     stats socket /var/lib/haproxy/stats
    #

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  httplog
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000
#---------------------------------------------------------------------
# main frontend which proxys to the backends
#---------------------------------------------------------------------
#frontend  main *:5000
#    acl url_static       path_beg       -i /static /images /javascript /stylesheets
#    acl url_static       path_end       -i .jpg .gif .png .css .js

#    use_backend static          if url_static
#    default_backend             app
frontend  www
    bind {{ hostvars['loadbalancer'].ansible_host }}:{{ port_ext_lb }}
    default_backend nginx_pool

backend nginx_pool
    balance     {{ balance_method }}
    mode http
    server  web1 {{ hostvars['web1'].ansible_host }}:{{ port_nginx_1 }} check
    server  web2 {{ hostvars['web1'].ansible_host }}:{{ port_nginx_2 }} check

## HTTPs section
listen https-proxy {{ hostvars['loadbalancer'].ansible_host }}:443
mode tcp
balance source
option httpclose
option forwardfor
server web1 {{ hostvars['web1'].ansible_host }}:443 check port 443
server web2 {{ hostvars['web2'].ansible_host }}:443 check port 443

#---------------------------------------------------------------------
# round robin balancing between the various backends
#---------------------------------------------------------------------
#backend app
#    balance     roundrobin
#    server  app1 127.0.0.1:5001 check
#    server  app2 127.0.0.1:5002 check
#    server  app3 127.0.0.1:5003 check
#    server  app4 127.0.0.1:5004 check

